/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.1
 * Generated at: 2024-12-30 10:03:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>登录界面</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./css/login.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./css/test.css/iconfont.css\">\r\n");
      out.write("    <!-- <link rel=\"stylesheet\" href=\"home_style.css\"> -->\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"back\">\r\n");
      out.write("        <a href=\"home.html\" class=\"reback\"><i class=\"iconfont icon-fanhui\"></i></a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"login1\">\r\n");
      out.write("            <!-- 标题 -->\r\n");
      out.write("            <div class=\"header\">登录</div>\r\n");
      out.write("            <!-- 登录界面 -->\r\n");
      out.write("            <div class=\"input1\">\r\n");
      out.write("                <input type=\"text\" class=\"username input1\" placeholder=\"用户名\">\r\n");
      out.write("                <input type=\"password\" class=\"password input1\" placeholder=\"密码\">\r\n");
      out.write("                <div class=\"btn\">登录</div>\r\n");
      out.write("                <div class=\"mistake\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- 注册界面链接 -->\r\n");
      out.write("            <div class=\"enroll1\">\r\n");
      out.write("                还没有账号？<a href=\"enroll.html\">点击注册</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"footer_bottom\">\r\n");
      out.write("        <div class=\"footer_bottom_txt\">\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li><a href=\"\">关于我们</a></li>\r\n");
      out.write("                <li><a href=\"\">商家服务大厅</a></li>\r\n");
      out.write("                <li><a href=\"\">开放平台</a></li>\r\n");
      out.write("                <li><a href=\"\">诚聘英才</a></li>\r\n");
      out.write("                <li><a href=\"\">联系我们</a></li>\r\n");
      out.write("                <li><a href=\"\">网站合作</a></li>\r\n");
      out.write("                <li><a href=\"\">法律声明</a></li>\r\n");
      out.write("                <li><a href=\"\">隐私权政策</a></li>\r\n");
      out.write("                <li><a href=\"\">知识产权</a></li>\r\n");
      out.write("                <li><a href=\"\">廉正举报</a></li>\r\n");
      out.write("                <li><a href=\"\">不当竞争举报</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"footer_bottom_txt\">\r\n");
      out.write("            <h4 style=\"color: white;font-size: 12px;\">版权所有：个人信息（计算机221 黄健泓 202210244127，吴楚发\r\n");
      out.write("                202210244131，陈锴202210244132）</h4>\r\n");
      out.write("            <p class=\"p\">\r\n");
      out.write("                增值电信业务经营许可证：浙B2-20110446 出版物网络交易平台服务经营备案证：新出发浙备字第2022003号 营业性演出许可证：浙演经20213300000101\r\n");
      out.write("                集邮市场开办者备案：杭集邮备005\r\n");
      out.write("                互联网违法和不良信息举报电话：0571-81683755 jubao.tb@service.taobao.com 中国互联网举报中心 中国扫黄打非网 全国文化和旅游市场网上举报投诉处理系统\r\n");
      out.write("                全国12315平台\r\n");
      out.write("                浙江省互联网违法和不良信息举报中心 全网举报 互联网药品信息服务资质证书编号：浙-（经营性）-2021-0139\r\n");
      out.write("                药品网络交易第三方平台备案信息：（浙）网药平台备字〔2023〕第000013-000号 浙公网安备 33010002000120号\r\n");
      out.write("                医疗器械网络交易服务第三方平台备案：（浙）网械平台备字[2018]第00002号 网络文化经营许可证：浙网文 [2021]1668-073号\r\n");
      out.write("                浙江省网络食品销售第三方平台提供者备案：浙网食A33010002 12318举报 浙B2-20110446-1\r\n");
      out.write("                © 2003-现在 TMALL.COM 版权所有\r\n");
      out.write("            </p>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script>\r\n");
      out.write("        const user = [{ username: 13430050185, password: 123456 },\r\n");
      out.write("        { username: 13682767866, password: 123457 },\r\n");
      out.write("        { username: 13521179380, password: 123458 }]\r\n");
      out.write("        const username = document.querySelector(\".username\")\r\n");
      out.write("        const password = document.querySelector(\".password\")\r\n");
      out.write("        const mistake = document.querySelector(\".mistake\")\r\n");
      out.write("        let flag = -1\r\n");
      out.write("        let mis = 0\r\n");
      out.write("        username.addEventListener('change', function () {\r\n");
      out.write("            for (let i = 0; i < user.length; i++) {\r\n");
      out.write("                if (user[i].username == username.value) {\r\n");
      out.write("                    flag = i;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("        password.addEventListener('change', function () {\r\n");
      out.write("            if (flag == -1) {\r\n");
      out.write("                return\r\n");
      out.write("            }\r\n");
      out.write("            else if (user[flag].password == password.value) {\r\n");
      out.write("                mis = 0\r\n");
      out.write("                return\r\n");
      out.write("            }\r\n");
      out.write("            else {\r\n");
      out.write("                mis = 1\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("        const btn = document.querySelector(\".btn\")\r\n");
      out.write("        btn.addEventListener('click', function () {\r\n");
      out.write("            if (mis == 1 || flag == -1) {\r\n");
      out.write("                mistake.innerText = \"用户不存在或密码错误\"\r\n");
      out.write("            }\r\n");
      out.write("            else {\r\n");
      out.write("                mistake.innerText = \"\"\r\n");
      out.write("            }\r\n");
      out.write("            if (mis == 0 && flag != -1) {\r\n");
      out.write("                alert(\"登录成功\")\r\n");
      out.write("                window.location.href = \"home.html\"\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
